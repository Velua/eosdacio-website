<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-04-15T12:25:19+02:00</updated><id>/feed.xml</id><title type="html">site.title</title><subtitle>site.description</subtitle><entry><title type="html">The Lost Key Solution Updates</title><link href="/2019/04/05/the-lost-key-solution-updates.html" rel="alternate" type="text/html" title="The Lost Key Solution Updates" /><published>2019-04-05T17:29:42+02:00</published><updated>2019-04-05T17:29:42+02:00</updated><id>/2019/04/05/the-lost-key-solution-updates</id><content type="html" xml:base="/2019/04/05/the-lost-key-solution-updates.html">&lt;p&gt;When EOS migrated from erc-20 tokens to EOS tokens, some holders (reportedly 273 accounts whose balances total 897,361.74514 EOS so far) either lost or failed to receive their private EOS keys. Since the mainnet launch, they’ve been waiting for a way to recover their funds - 
If you are one of them, join &lt;a href=&quot;https://t.me/eoslostkeysolution&quot;&gt;this Telegram group now&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;In Q4 2018, Michael Yeates of eosDAC, Kedar of Libertyblock, Rohan of EOS Authority and Daniel Keyes of EOS Nation have begun work on building a software solution to the lost key situation for people who have lost access to their EOS genesis accounts (as announced in &lt;a href=&quot;https://medium.com/@eosnationbp/work-in-progress-on-an-automated-solution-for-lost-eos-genesis-keys-18b4c335cfb&quot;&gt;this post&lt;/a&gt;). Michael has finished the smart contract (you can check out &lt;a href=&quot;https://github.com/eosdac/eosio.lost&quot;&gt;the repo&lt;/a&gt;) and now we are waiting for EOS Authority to run the tests on jungle before deploying it onto the mainnet. The involved BP teams are also making some EOS donations for RAM required to store the whitelist of accounts.&lt;/p&gt;

&lt;center&gt; ![eosdac2alogo28.png](https://steemitimages.com/DQmPerknmqTDcsagXjERkitKthcr2anHRDSTJ85EDBhhkqW/eosdac2alogo28.png) &lt;/center&gt;

&lt;p&gt;If you lost your EOS private key, check out the requirements:&lt;/p&gt;

&lt;p&gt;✓I held EOS as ERC-20 tokens on Ethereum (Before June)
✓I still control the Ethereum private key 
✓I have no access to the EOS Private key
✓I have never used my EOS account
✓ The account I lost the private key for has less than 100,000 EOS tokens (Accounts containing 100,000 or more tokens will be removed from the automated whitelist)&lt;/p&gt;

&lt;p&gt;If eligible, use this recovery tool once it’s deployed to the mainnet: https://eosauthority.com/lostkey&lt;/p&gt;

&lt;p&gt;Please notice:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;This is one time only recovery&lt;/strong&gt; - Once you have reset the keys, the account will be marked and no further recoveries will be permitted.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The account holder must wait 30 days&lt;/strong&gt; before the keys are reset following the verification. The account being modified will be sent a message indicating that their account is due for reset, during the 30 day period the key holder can make a transaction on the account to block the key change.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Your Ethereum account must not show clear signs of being attacked and drained.&lt;/strong&gt; We will run scripts designed to detect hacked Ethereum accounts and remove them from the whitelist. For hacked accounts, visit https://recovery.eos911.io/&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt; ![eosdac2alogo28.png](https://steemitimages.com/DQmPerknmqTDcsagXjERkitKthcr2anHRDSTJ85EDBhhkqW/eosdac2alogo28.png) &lt;/center&gt;

&lt;p&gt;Expected procedure:&lt;/p&gt;

&lt;center&gt;![Lost Key.png](https://cdn.steemitimages.com/DQmb8WrvsxF1KtNBqK4tmRFuJ1p68uzGttUFX91CZHeXyib/Lost%20Key.png)&lt;/center&gt;

&lt;p&gt;If you have used the tool to recover your keys , regained access to your EOS tokens, and would like to pay your gratitude to the people behind the scene, please support the following BPs who have worked hard on the solution:
&lt;strong&gt;eosdacserver (eosDAC)&lt;/strong&gt;
&lt;strong&gt;eosauthority (EOS Authority)&lt;/strong&gt;
&lt;strong&gt;libertyblock (LibertyBlock)&lt;/strong&gt;
&lt;strong&gt;argentinaeos (EOS Argentina)&lt;/strong&gt;
&lt;strong&gt;eosnationftw (EOS Nation)&lt;/strong&gt;
&lt;strong&gt;cryptolions1 (CryptoLions)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(Not sure how to vote for BPs? &lt;a href=&quot;https://eosdac.io/how-to-vote-for-eos-blockproducers/&quot;&gt;Here’s EOS BP voting tutorial&lt;/a&gt;)&lt;/p&gt;

&lt;hr /&gt;

&lt;center&gt;&lt;a href=&quot;https://eosdac.io/&quot;&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmRQWM3QtQ21wddAMCjbVRhB3rM7L4AGWLY9QpNmkXNLps/Screen%20Shot%202018-06-12%20at%2011.00.55%20PM.png&quot; /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PbQpAJOP6iA&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;center&gt;&lt;h1&gt;Please vote for eosdacserver&lt;/h1&gt;&lt;/center&gt;

&lt;p&gt;Join &lt;a href=&quot;https://eosdac.io/news/#newsletter&quot;&gt;our newsletter&lt;/a&gt; to stay informed and follow us on your favorite social media platform:&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://steemit.com/@eosdac&quot; target=&quot;_blank&quot;&gt;Steemit&lt;/a&gt; | &lt;a href=&quot;http://discord.io/eosdac&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://t.me/eosdacio&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/eosdac&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/eosdac&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://plus.google.com/+eosdac&quot; target=&quot;_blank&quot;&gt;Google-plus&lt;/a&gt; | &lt;a href=&quot;https://github.com/eosdac&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://instagram.com/eosdac&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt; | &lt;a href=&quot;https://linkedin.com/company/eosdac&quot; target=&quot;_blank&quot;&gt;Linkedin&lt;/a&gt; | &lt;a href=&quot;https://medium.com/eosdac&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/EOSDAC/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/eosdac&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; | &amp;lt;a href=”http://weibo.com/eosdac” target=”_blank”&amp;gt;Weibo&amp;lt;/a&amp;gt;| &lt;a href=&quot;https://vk.com/eosdac&quot; target=&quot;_blank&quot;&gt;VK&lt;/a&gt;| &lt;a href=&quot;https://bihu.com/people/586348&quot; target=&quot;_blank&quot;&gt;Bihu&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">When EOS migrated from erc-20 tokens to EOS tokens, some holders (reportedly 273 accounts whose balances total 897,361.74514 EOS so far) either lost or failed to receive their private EOS keys. Since the mainnet launch, they’ve been waiting for a way to recover their funds - If you are one of them, join this Telegram group now for updates.</summary></entry><entry><title type="html">The DAC Factory</title><link href="/2019/03/26/the-dac-factory.html" rel="alternate" type="text/html" title="The DAC Factory" /><published>2019-03-26T23:24:12+01:00</published><updated>2019-03-26T23:24:12+01:00</updated><id>/2019/03/26/the-dac-factory</id><content type="html" xml:base="/2019/03/26/the-dac-factory.html">&lt;p&gt;From the very beginning of our existence, we’ve worked hard as a community-owned block producer and DAC enabler. As part of enabling Decentralized Autonomous Communities, we’ve been working on open-source EOS smart contracts, APIs, and front-end tools to run eosDAC. Over time we plan to make them available and easy to use to a larger audience interested in using DAC technology for their own projects and communities. The benefits of elected custodian multi-signature permissions alone are truly valuable!&lt;/p&gt;

&lt;p&gt;On February 1st, &lt;a href=&quot;https://steemit.com/dac/@eosdac/tutorial-launching-your-own-dac-on-the-jungle-test-network-with-eosdac&quot;&gt;we published a detailed tutorial&lt;/a&gt; on how you can start working with our technology stack right now. The response was really encouraging as more and more people are realizing the value of building DACs instead of centralized, single-point-of-failure systems without reproducible, trusted and transparent results. I (Luke) even got a chance to &lt;a href=&quot;https://docs.google.com/presentation/d/1UGo8sY15xAT2qtypyBgfz3IohjIDPR44qfEPABZyOXU/edit#slide=id.g54ccc56cd1_0_284&quot;&gt;talk about our DAC technology&lt;/a&gt; with a member of the Puerto Rican government and their digital transformation group and blockchain advisory council. Our DAC-enabling goal is to continue simplifying the process and make it easy for anyone to launch their own DAC.&lt;/p&gt;

&lt;p&gt;We’re not there yet, but we are making progress. In the future, creating a DAC on EOS will be done with a nice user interface and customizable tools. Until then, you can still explore building your own DAC using a simple script we developed recently which automates much of the process for you. You can try it yourself using the Github repo here: https://github.com/eosdac/dac-factory&lt;/p&gt;

&lt;p&gt;Here’s a 17 minute video showing how the script works:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/dtFZjJ1409M&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;If you’d like to build your own DAC, please contact us in &lt;a href=&quot;http://discord.io/eosdac&quot;&gt;our Discord channel&lt;/a&gt;. Members of our community would love to help you get started.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The future is decentralized.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;Big thank you to Dallas, Michael, Peicesnbits, Nod74, and our translation team which has done the bulk of the work to make these tools available.&lt;/sub&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;center&gt;&lt;a href=&quot;https://eosdac.io/&quot;&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmRQWM3QtQ21wddAMCjbVRhB3rM7L4AGWLY9QpNmkXNLps/Screen%20Shot%202018-06-12%20at%2011.00.55%20PM.png&quot; /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PbQpAJOP6iA&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;center&gt;&lt;h1&gt;Please vote for eosdacserver&lt;/h1&gt;&lt;/center&gt;

&lt;p&gt;Join &lt;a href=&quot;https://eosdac.io/news/#newsletter&quot;&gt;our newsletter&lt;/a&gt; to stay informed and follow us on your favorite social media platform:&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://steemit.com/@eosdac&quot; target=&quot;_blank&quot;&gt;Steemit&lt;/a&gt; | &lt;a href=&quot;http://discord.io/eosdac&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://t.me/eosdacio&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/eosdac&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/eosdac&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://plus.google.com/+eosdac&quot; target=&quot;_blank&quot;&gt;Google-plus&lt;/a&gt; | &lt;a href=&quot;https://github.com/eosdac&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://instagram.com/eosdac&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt; | &lt;a href=&quot;https://linkedin.com/company/eosdac&quot; target=&quot;_blank&quot;&gt;Linkedin&lt;/a&gt; | &lt;a href=&quot;https://medium.com/eosdac&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/EOSDAC/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/eosdac&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; | &amp;lt;a href=”http://weibo.com/eosdac” target=”_blank”&amp;gt;Weibo&amp;lt;/a&amp;gt;| &lt;a href=&quot;https://vk.com/eosdac&quot; target=&quot;_blank&quot;&gt;VK&lt;/a&gt;| &lt;a href=&quot;https://bihu.com/people/586348&quot; target=&quot;_blank&quot;&gt;Bihu&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">From the very beginning of our existence, we’ve worked hard as a community-owned block producer and DAC enabler. As part of enabling Decentralized Autonomous Communities, we’ve been working on open-source EOS smart contracts, APIs, and front-end tools to run eosDAC. Over time we plan to make them available and easy to use to a larger audience interested in using DAC technology for their own projects and communities. The benefits of elected custodian multi-signature permissions alone are truly valuable!</summary></entry><entry><title type="html">eosDAC invites you to EOS Alliance Chinese Community Meeting featuring Michael Yeates</title><link href="/2019/03/19/eosdac-invites-you-to-eos-alliance-chinese-community-meeting-featuring-michael-yeates.html" rel="alternate" type="text/html" title="eosDAC invites you to EOS Alliance Chinese Community Meeting featuring Michael Yeates" /><published>2019-03-19T15:21:21+01:00</published><updated>2019-03-19T15:21:21+01:00</updated><id>/2019/03/19/eosdac-invites-you-to-eos-alliance-chinese-community-meeting-featuring-michael-yeates</id><content type="html" xml:base="/2019/03/19/eosdac-invites-you-to-eos-alliance-chinese-community-meeting-featuring-michael-yeates.html">&lt;p&gt;eosDAC team members will be partnering with the EOS Alliance to transform the Alliance into a decentralized autonomous non-profit organization (DAO - same as DAC) run entirely on the EOS blockchain. (&lt;a href=&quot;https://medium.com/eos-new-york/the-eos-dao-progress-on-chain-99fc4a47e4ac&quot;&gt;Read the post&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The EOS Alliance organization has shown great courage by choosing to “walk the walk” and transition entirely on-chain, functioning as a DAO. -  EOS New York (eosDAC team partners)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As the first and only community-owned block producer and DAC enabler, eosDAC is extremely happy about this news and in regards to this we thought now is the best time to talk and discuss about DACs! Coming Thursday, Michael of eosDAC will be joining the EOS Alliance Community Meeting to talk about what is a DAC (Decentralised Autonomous Community) and how any individual/organisation can build a DAC using the DAC Software. This includes private companies looking for a way to track ownership and decision-making transparently using the blockchain.&lt;/p&gt;

&lt;p&gt;The live stream is scheduled for the 21st of March @ 13:00 UTC. Join us @&lt;a href=&quot;https://t.me/eos_alliance&quot;&gt; Alliance Telegram&lt;/a&gt;. You can also &lt;a href=&quot;https://mp.weixin.qq.com/s/qznAh3F3nunOdkvMUiw8DA&quot;&gt;learn about DACs in Chinese&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;-Soyoung &amp;amp; Saro&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://eosdac.io/&quot;&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmRQWM3QtQ21wddAMCjbVRhB3rM7L4AGWLY9QpNmkXNLps/Screen%20Shot%202018-06-12%20at%2011.00.55%20PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PbQpAJOP6iA&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;center&gt;&lt;h1&gt;Please vote for eosdacserver&lt;/h1&gt;&lt;/center&gt;

&lt;p&gt;Join &lt;a href=&quot;https://eosdac.io/news/#newsletter&quot;&gt;our newsletter&lt;/a&gt; to stay informed and follow us on your favorite social media platform:&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://steemit.com/@eosdac&quot; target=&quot;_blank&quot;&gt;Steemit&lt;/a&gt; | &lt;a href=&quot;http://discord.io/eosdac&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://t.me/eosdacio&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/eosdac&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/eosdac&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://plus.google.com/+eosdac&quot; target=&quot;_blank&quot;&gt;Google-plus&lt;/a&gt; | &lt;a href=&quot;https://github.com/eosdac&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://instagram.com/eosdac&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt; | &lt;a href=&quot;https://linkedin.com/company/eosdac&quot; target=&quot;_blank&quot;&gt;Linkedin&lt;/a&gt; | &lt;a href=&quot;https://medium.com/eosdac&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/EOSDAC/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/eosdac&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; | &amp;lt;a href=”http://weibo.com/eosdac” target=”_blank”&amp;gt;Weibo&amp;lt;/a&amp;gt;| &lt;a href=&quot;https://vk.com/eosdac&quot; target=&quot;_blank&quot;&gt;VK&lt;/a&gt;| &lt;a href=&quot;https://bihu.com/people/586348&quot; target=&quot;_blank&quot;&gt;Bihu&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">eosDAC team members will be partnering with the EOS Alliance to transform the Alliance into a decentralized autonomous non-profit organization (DAO - same as DAC) run entirely on the EOS blockchain. (Read the post)</summary></entry><entry><title type="html">Service provider financial report – month to 31 January 2019</title><link href="/2019/02/21/financial-report.html" rel="alternate" type="text/html" title="Service provider financial report – month to 31 January 2019" /><published>2019-02-21T00:10:00+01:00</published><updated>2019-02-21T00:10:00+01:00</updated><id>/2019/02/21/financial-report</id><content type="html" xml:base="/2019/02/21/financial-report.html">&lt;p&gt;This is a summary of eosDAC’s financial balances held by Incommsec Ltd and the transactions conducted during the month of January 2019. This is the report of an eosDAC service provider; it does not report on eosDAC’s cryptocurrency balances or on-chain transactions.&lt;/p&gt;</content><author><name></name></author><summary type="html">This is a summary of eosDAC’s financial balances held by Incommsec Ltd and the transactions conducted during the month of January 2019. This is the report of an eosDAC service provider; it does not report on eosDAC’s cryptocurrency balances or on-chain transactions.</summary></entry><entry><title type="html">Service provider financial report – month to 31 December 2018</title><link href="/2019/02/21/financial-report2.html" rel="alternate" type="text/html" title="Service provider financial report – month to 31 December 2018" /><published>2019-02-21T00:00:01+01:00</published><updated>2019-02-21T00:00:01+01:00</updated><id>/2019/02/21/financial-report2</id><content type="html" xml:base="/2019/02/21/financial-report2.html">&lt;p&gt;This is a summary of eosDAC’s financial balances held by Incommsec Ltd and the transactionsconducted by them during the month of December 2018.This is the report of an eosDAC service provider; it does not report on eosDAC’s cryptocurrency balances or on-chain transactions, which are conducted by the DAC itself.&lt;/p&gt;</content><author><name></name></author><summary type="html">This is a summary of eosDAC’s financial balances held by Incommsec Ltd and the transactionsconducted by them during the month of December 2018.This is the report of an eosDAC service provider; it does not report on eosDAC’s cryptocurrency balances or on-chain transactions, which are conducted by the DAC itself.</summary></entry><entry><title type="html">eosDAC reports active worker proposals, revenue and expenditure for December and January</title><link href="/2019/02/14/on-eosdac-reports-active-worker-proposals-revenue-and-expenditure-for-december-and-january.html" rel="alternate" type="text/html" title="eosDAC reports active worker proposals, revenue and expenditure for December and January" /><published>2019-02-14T16:22:03+01:00</published><updated>2019-02-14T16:22:03+01:00</updated><id>/2019/02/14/on-eosdac-reports-active-worker-proposals-revenue-and-expenditure-for-december-and-january</id><content type="html" xml:base="/2019/02/14/on-eosdac-reports-active-worker-proposals-revenue-and-expenditure-for-december-and-january.html">&lt;p&gt;eosDAC is pleased to report its EOS expenditure in December and January, reflecting our priorities: secure and reliable block production; continued preparation for the onset of elected Custodians of eosDAC; support for the eosDAC community and awareness of the token; and leadership around chain-level issues so as to support the EOS ecosystem in general and our community in particular.&lt;/p&gt;

&lt;h3 id=&quot;eos-revenue-and-expenditure-for-the-period-1-december-2018--31-december-2018&quot;&gt;EOS revenue and expenditure for the period 1 December 2018 – 31 December 2018&lt;/h3&gt;

&lt;hr /&gt;

&lt;center&gt;https://steemitimages.com/2000x1000/https://cdn.steemitimages.com/DQmUz8Pbf8gQb223HUz9e3MF7nU6xYrQXXDVsCwf2prjowQ/image.png&lt;/center&gt;

&lt;h3 id=&quot;eos-revenue-and-expenditure-for-the-period-1-january--2019--31-january-2019&quot;&gt;EOS revenue and expenditure for the period 1 January  2019 – 31 January 2019&lt;/h3&gt;

&lt;hr /&gt;

&lt;center&gt;https://steemitimages.com/2000x1000/https://cdn.steemitimages.com/DQmUtiwT4uyMKwwREP6746DnHSj7yjCa9BnwzqMrCYdYxPJ/image.png&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Detailed expenditure (worker proposals)&lt;/strong&gt;
&lt;strong&gt;Payments for December worker proposals&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;https://steemitimages.com/2000x1000/https://cdn.steemitimages.com/DQmboGMjwHdU9kEaBcZYR6pjqLMFLaxNJenBN5Zjb6w1Ye2/image.png&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Payments for January worker proposals&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;https://steemitimages.com/2000x1000/https://cdn.steemitimages.com/DQmRUJJtXKs7iYS8ya513WXioC1vi2x63q4b2gxvXREGGvu/image.png&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Service provider’s payments (provided for information) – payments from dacocoiogmbh&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;https://steemitimages.com/2000x1000/https://cdn.steemitimages.com/DQmcnhoaLNmmb9qdgwa8Ari8MuZ6KGj1c7nJtbUU1w7dqKu/image.png&lt;/center&gt;

&lt;p&gt;-Saro&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://eosdac.io/&quot;&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmRQWM3QtQ21wddAMCjbVRhB3rM7L4AGWLY9QpNmkXNLps/Screen%20Shot%202018-06-12%20at%2011.00.55%20PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PbQpAJOP6iA&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;center&gt;&lt;h1&gt;Please vote for eosdacserver&lt;/h1&gt;&lt;/center&gt;

&lt;p&gt;Join &lt;a href=&quot;https://eosdac.io/news/#newsletter&quot;&gt;our newsletter&lt;/a&gt; to stay informed and follow us on your favorite social media platform:&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://steemit.com/@eosdac&quot; target=&quot;_blank&quot;&gt;Steemit&lt;/a&gt; | &lt;a href=&quot;http://discord.io/eosdac&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://t.me/eosdacio&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/eosdac&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/eosdac&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://plus.google.com/+eosdac&quot; target=&quot;_blank&quot;&gt;Google-plus&lt;/a&gt; | &lt;a href=&quot;https://github.com/eosdac&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://instagram.com/eosdac&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt; | &lt;a href=&quot;https://linkedin.com/company/eosdac&quot; target=&quot;_blank&quot;&gt;Linkedin&lt;/a&gt; | &lt;a href=&quot;https://medium.com/eosdac&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/EOSDAC/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/eosdac&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; | &amp;lt;a href=”http://weibo.com/eosdac” target=”_blank”&amp;gt;Weibo&amp;lt;/a&amp;gt;| &lt;a href=&quot;https://vk.com/eosdac&quot; target=&quot;_blank&quot;&gt;VK&lt;/a&gt;| &lt;a href=&quot;https://bihu.com/people/586348&quot; target=&quot;_blank&quot;&gt;Bihu&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">eosDAC is pleased to report its EOS expenditure in December and January, reflecting our priorities: secure and reliable block production; continued preparation for the onset of elected Custodians of eosDAC; support for the eosDAC community and awareness of the token; and leadership around chain-level issues so as to support the EOS ecosystem in general and our community in particular.</summary></entry><entry><title type="html">eosDAC DACTIVATION DAY is Here! (Feb 11th 2019)</title><link href="/2019/02/11/eosdac-dactivation-day-is-here-feb-11th-2019.html" rel="alternate" type="text/html" title="eosDAC DACTIVATION DAY is Here! (Feb 11th 2019)" /><published>2019-02-11T10:32:36+01:00</published><updated>2019-02-11T10:32:36+01:00</updated><id>/2019/02/11/eosdac-dactivation-day-is-here-feb-11th-2019</id><content type="html" xml:base="/2019/02/11/eosdac-dactivation-day-is-here-feb-11th-2019.html">&lt;p&gt;&lt;strong&gt;The first Elections for eosDAC custodians have now reached 15% and the DAC is now in the hands of the community&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;EosDAC, the community owned block producer and DAC (Decentralised Autonomous Community) enabler, was envisioned through the idea of reusing design elements of the eosio software to allow many DACs to launch and thrive on the EOS blockchains. The open source eosDAC code, which has been developed over the last year, enables a delegated governance model, through which token holders can vote for 12 custodians on a week by week basis. The elected custodians then represent the community for all decisions the DAC makes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmTWHB72LqWB3zQXXchZytH5ekgPnxyY2h5Gue2FpLT1D2/members.png&quot; alt=&quot;members.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The voting was initiated 2 months ago - see https://steemit.com/eosdac/@eosdac/eosdac-custodian-candidate-voting-is-live - and there was a clause in eosDACs constitution stating that voting should reach a threshold of 15% before the elected custodians could take over (as per the EOS mainnet launch).  This 15% has now been reached.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmQCNYNCBwvdEsDB1JUakToV4UJFt2Zdfpix8y5k1JSRHH/votecustodians1.png&quot; alt=&quot;votecustodians1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The community will have full say over the direction of the DAC. As such there will be very interesting times ahead as custodians push the views of the community they represent.&lt;/p&gt;

&lt;p&gt;The genesis interim custodian prioritised block production, tools development and community communication. Much has been achieved since the initial announcement of eosDAC but revenue is lower than was anticipated, therefore  prioritisation with a focus on community owned block production and enabling new DACs will be important.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://eosdac.io/&quot;&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmRQWM3QtQ21wddAMCjbVRhB3rM7L4AGWLY9QpNmkXNLps/Screen%20Shot%202018-06-12%20at%2011.00.55%20PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PbQpAJOP6iA&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;center&gt;&lt;h1&gt;Please vote for eosdacserver&lt;/h1&gt;&lt;/center&gt;

&lt;p&gt;Join &lt;a href=&quot;https://eosdac.io/news/#newsletter&quot;&gt;our newsletter&lt;/a&gt; to stay informed and follow us on your favorite social media platform:&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://steemit.com/@eosdac&quot; target=&quot;_blank&quot;&gt;Steemit&lt;/a&gt; | &lt;a href=&quot;http://discord.io/eosdac&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://t.me/eosdacio&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/eosdac&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/eosdac&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://plus.google.com/+eosdac&quot; target=&quot;_blank&quot;&gt;Google-plus&lt;/a&gt; | &lt;a href=&quot;https://github.com/eosdac&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://instagram.com/eosdac&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt; | &lt;a href=&quot;https://linkedin.com/company/eosdac&quot; target=&quot;_blank&quot;&gt;Linkedin&lt;/a&gt; | &lt;a href=&quot;https://medium.com/eosdac&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/EOSDAC/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/eosdac&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; | &amp;lt;a href=”http://weibo.com/eosdac” target=”_blank”&amp;gt;Weibo&amp;lt;/a&amp;gt;| &lt;a href=&quot;https://vk.com/eosdac&quot; target=&quot;_blank&quot;&gt;VK&lt;/a&gt;| &lt;a href=&quot;https://bihu.com/people/586348&quot; target=&quot;_blank&quot;&gt;Bihu&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">The first Elections for eosDAC custodians have now reached 15% and the DAC is now in the hands of the community</summary></entry><entry><title type="html">Tutorial: Launching Your Own DAC on the Jungle Test Network with eosDAC</title><link href="/2019/02/01/tutorial-launching-your-own-dac-on-the-jungle-test-network-with-eosdac.html" rel="alternate" type="text/html" title="Tutorial: Launching Your Own DAC on the Jungle Test Network with eosDAC" /><published>2019-02-01T17:01:42+01:00</published><updated>2019-02-01T17:01:42+01:00</updated><id>/2019/02/01/tutorial-launching-your-own-dac-on-the-jungle-test-network-with-eosdac</id><content type="html" xml:base="/2019/02/01/tutorial-launching-your-own-dac-on-the-jungle-test-network-with-eosdac.html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; You can now use the &lt;a href=&quot;https://steemit.com/dac/@eosdac/the-dac-factory&quot;&gt;DAC Factory script&lt;/a&gt; to automate much of what is described here.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmQ2gzprShnJdwdYn7chyQmcPmmdhgYw3DXcuTXp5s4FtY/do_you_want_to_build_a_dac.jpg&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;The future is decentralized.&lt;/strong&gt; Lasting value will be created and maintained by communities and their network effect. Centralized hierarchies controlled by the unelected will increasingly be seen as an old, rigid model compared to dyanmic entities where everyone with skin in the game has a voice and those who create value are rewarded according to the consensus of the community expressed through elected custodians.&lt;/p&gt;

&lt;p&gt;This is what eosDAC is working to build.&lt;/p&gt;

&lt;p&gt;I’m regularly encouraged by friends in the cryptocurrency space excited about what eosDAC is doing who want to launch their own DACs using our open source technology. Our two reasons for existing are to be a community-owned EOS block producer and a DAC Enabler. The future vision for DAC Enabling includes a DAC Factory where anyone can launch their own DAC as easily as possible. We’re not there yet as it will take plenty of work to streamline the automation of customizations, account creation, set contract actions, and permissions configuration, but we will get there eventually.&lt;/p&gt;

&lt;p&gt;Our first goal is to finish up the &lt;a href=&quot;https://members.eosdac.io/&quot;&gt;eosDAC Member Client&lt;/a&gt; to have all the functionality required to run a DAC with an easy-to-use, decentralized interface.  When we turned on Custodian voting a couple months ago, I wrote a post outlining some of the main EOS accounts that make the DAC run along with the Github repos involved: &lt;a href=&quot;https://steemit.com/eosdac/@eosdac/eosdac-custodian-candidate-voting-is-live&quot;&gt;eosDAC Custodian Candidate Voting Is Live!&lt;/a&gt;. I was thinking about this again recently with a post describing how Steem could organize itself as a DAC: &lt;a href=&quot;https://steemit.com/steemdac/@lukestokes/steemdac-a-plan-we-can-start-today-to-decentralize-steem-governance&quot;&gt;SteemDAC: A Plan We Can Start Today to Decentralize Steem Governance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of the pieces are already in place for anyone to take what we already have today and launch their own DAC. Although this will be much easier in the future with the DAC Factory, I figured it would be useful to outline all the pieces involved for the many who are so excited about this they can’t seem to wait before experimenting with their own DAC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I went ahead and recorded a full video walk through of this tutorial as well which you can see here:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/AvM0sA07IME&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;lets-get-started&quot;&gt;Let’s Get Started!&lt;/h1&gt;

&lt;p&gt;The following is a tutorial for how you can launch your own DAC right now using what we’ve built so far. One of the most powerful and useful aspects of a DAC is that authority is distributed among elected custodians. This protects funds and code through a multisignature permissions system updated every newperiod to include the top token-holder-elected custodians. This account for eosDAC is dacauthority which you can see here: https://bloks.io/account/dacauthority&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://cdn.steemitimages.com/DQmRN7obgDRsj1rqhL3xgcyYDEGNc33vc3mxU8GdEaPXm6f/image.png&quot; /&gt;
&lt;/center&gt;

&lt;p&gt;This tutorial will walk you through everything, from start to finish, to create your own DAC authority account, along with all the other accounts and contracts which make the DAC function.&lt;/p&gt;

&lt;p&gt;This tutorial was done on a Mac, but any computer with unix-based emulation will work as well.&lt;/p&gt;

&lt;p&gt;To start, create a project folder (to make things easier, you can copy these commands together and run them all at once):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir TestDAC
cd TestDAC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Get the version of EOS you want to work with, build, and install it (this will take some time).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/EOS-Mainnet/eos.git
cd eos
git checkout mainnet-1.5.1
git submodule update --init --recursive
./eosio_build.sh -s EOS
sudo ./eosio_install.sh 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you don’t have the necessary tools or libraries on your computer needed to build these libraries, check the readme file on the EOS Github.&lt;/p&gt;

&lt;p&gt;You’ll also need eosio.cdt to compile your contracts:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ..
git clone https://github.com/EOSIO/eosio.cdt.git
cd eosio.cdt
git checkout v1.4.1
git submodule update --init --recursive
./build.sh
sudo ./install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s set up a couple scripts to keep everything contained in this folder. Adjust this according to your own starting folder. Create keosd.sh as follows in the TestDAC folder:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$cwd&lt;/span&gt;/eos/build/bin/keosd &lt;span class=&quot;nt&quot;&gt;--wallet-dir&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cwd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--http-server-address&lt;/span&gt; localhost:8900 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Set that to executable and run it:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod +x keosd.sh 
./keosd.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In a new terminal window, create a script for running cleos to connect with the Jungle test network. Create jungle.sh as follows:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$cwd&lt;/span&gt;/eos/build/bin/cleos &lt;span class=&quot;nt&quot;&gt;--url&lt;/span&gt; http://jungle2.cryptolions.io:80/ &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And use it to create a wallet:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod +x jungle.sh 
./jungle.sh wallet create --to-console;
Creating wallet: default
Save password to use in the future to unlock this wallet.
Without password imported keys will not be retrievable.
&quot;PW5................................................&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save this wallet password in a password manager or some other secure location.&lt;/p&gt;

&lt;p&gt;Create and save an EOS keypair which we’ll use for creating our accounts on the Jungle test network.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh create key --to-console
Private key: 5K..................................................
Public key: EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next head over to the Jungle testnet monitor and create the various accounts we need to run the DAC. We’ll start with the authority account: https://monitor.jungletestnet.io/#account I’ll show the example names I used, but since those are already taken on Jungle, you’ll want to use your own. Throughout this tutorial, just replace the account listed here with the account you’ve created.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://cdn.steemitimages.com/DQmZevHjYJXJUeQTa3LPpqKjkTDojtyFy61v4emSMXfVaZ2/image.png&quot; /&gt;
&lt;/center&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lukedacauth1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We also need a token account which holds all the token and membership code:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lukedactoken&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The custodian account which handles custodian voting and more:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lukedaccusto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The main DAC account for holding DAC funds:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lukedachold1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And the multisig account where worker proposal payments will be managed:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lukedacmulti&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You’ll want to create your own variations of these account names, just remember they have to be 12 characters long and can’t include any symbols, but only letters and numbers 1 though 5.&lt;/p&gt;

&lt;p&gt;Hit up the Jungle testnet faucet for each account to ensure you have enough EOS needed for RAM, CPU, and Bandwidth:&lt;/p&gt;

&lt;p&gt;https://api.monitor.jungletestnet.io/#faucet&lt;/p&gt;

&lt;p&gt;Throughout this tutorial, replace your account names as needed.&lt;/p&gt;

&lt;p&gt;Now unlock your wallet, import your private key, buy yourself some RAM, and stake some CPU/Bandwidth for each account (make sure keosd.sh is still running):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh wallet unlock
./jungle.sh wallet import
./jungle.sh system buyram lukedactoken lukedactoken &quot;30.000 EOS&quot;
./jungle.sh system delegatebw lukedactoken lukedactoken &quot;10.000 EOS&quot; &quot;50.000 EOS&quot;
./jungle.sh system buyram lukedacmulti lukedacmulti &quot;30.000 EOS&quot;
./jungle.sh system delegatebw lukedacmulti lukedacmulti &quot;10.000 EOS&quot; &quot;50.000 EOS&quot;
./jungle.sh system buyram lukedachold1 lukedachold1 &quot;30.000 EOS&quot;
./jungle.sh system delegatebw lukedachold1 lukedachold1 &quot;10.000 EOS&quot; &quot;50.000 EOS&quot;
./jungle.sh system buyram lukedaccusto lukedaccusto &quot;30.000 EOS&quot;
./jungle.sh system delegatebw lukedaccusto lukedaccusto &quot;10.000 EOS&quot; &quot;50.000 EOS&quot;
./jungle.sh system buyram lukedacauth1 lukedacauth1 &quot;30.000 EOS&quot;
./jungle.sh system delegatebw lukedacauth1 lukedacauth1 &quot;10.000 EOS&quot; &quot;50.000 EOS&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If this were on the real mainnet, you’d want to adjust those numbers based on your actual needs.&lt;/p&gt;

&lt;p&gt;Next we’ll get into compiling and setting the code contracts for these accounts:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir daccontracts
cd daccontracts
git clone https://github.com/eosdac/eosdactoken.git
git clone https://github.com/eosdac/daccustodian.git
git clone https://github.com/eosdac/dacmultisigs.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You shouldn’t have to modify anything on the token contract, so you can set that as is (adjust paths and account names as needed):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh set contract lukedactoken /Users/lukestokes/Documents/workspace/eosDAC/TestDAC/daccontracts/eosdactoken/output/jungle/eosdactokens -p lukedactoken
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are currently some tweaks we have to make for the daccustodian account, but in the future this may not be necessary.&lt;/p&gt;

&lt;p&gt;Modifiy daccustodian/daccustodian.hpp:&lt;/p&gt;

&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;name authaccount = &quot;dacauthority&quot;_n;&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;name authaccount = &quot;lukedacauth1&quot;_n;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(but use the account name you created, as you should throughout this tutorial)&lt;/p&gt;

&lt;p&gt;Modify the jungle compile script:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/output/jungle/compile.sh b/output/jungle/compile.sh
index 8b180ff..8889d3b 100755
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/output/jungle/compile.sh
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/output/jungle/compile.sh
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -1,5 +1,5 @@
&lt;/span&gt; #!/usr/bin/env bash
 
&lt;span class=&quot;gd&quot;&gt;-eosio-cpp -DTOKENCONTRACT='&quot;kasdactokens&quot;' -DTRANSFER_DELAY=20 -o output/jungle/daccustodian/daccustodian.wasm daccustodian.cpp
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+eosio-cpp -DTOKENCONTRACT='&quot;lukedactoken&quot;' -DTRANSFER_DELAY=20 -o output/jungle/daccustodian/daccustodian.wasm daccustodian.cpp
&lt;/span&gt; 
 eosio-abigen daccustodian.hpp -contract daccustodian -output output/jungle/daccustodian/daccustodian.abi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and run it from the TestDAC/daccontracts/daccustodian directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./output/jungle/compile.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next set it from the TestDAC directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh set contract lukedaccusto /Users/lukestokes/Documents/workspace/eosDAC/TestDAC/daccontracts/daccustodian/output/jungle/daccustodian -p lukedaccusto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next we’ll compile the dacmultisigs contract from TestDAC/daccontracts/dacmultisigs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./output/jungle/compile.sh 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Set the contract from the TestDAC directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh set contract lukedacmulti /Users/lukestokes/Documents/workspace/eosDAC/TestDAC/daccontracts/dacmultisigs/output/jungle/dacmultisigs -p lukedacmulti
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Now let’s start configuring things.&lt;/p&gt;

&lt;p&gt;The DAC is bound by the Constitution the members agree to. You can host your Constitution anywhere, but the current design hosts it on Github and uses a hash of the document to verify integrity. You should get your own legal advice as to what your Constitution should include, but for demonstration purposes only, I’m going to fork and clone the existing eosDAC Constitution and modify it slightly.&lt;/p&gt;

&lt;p&gt;After forking on Github,&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:lukestokes/constitution.git
cd constitution
sed -i -- 's/eosDAC/TestDAC/g' constitution.md
git diff
git add .
git commit -m &quot;Using TestDAC as an example&quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Get the md5 hash of your constitution via:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;md5 constitution.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Use that and the raw file (with the specific commit you just made) to create a terms.json file in the TestDAC directory (it’s important to get the RAW link to the file):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo '[&quot;https://raw.githubusercontent.com/lukestokes/constitution/50de655bf59656d317222dedeb3c417358a0ecd9/constitution.md&quot;, &quot;a2022da6e770e0b2c3e5d3a10a560dc9&quot;]' &amp;gt; terms.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And set the terms on the account:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh push action lukedactoken newmemterms terms.json -p lukedactoken
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If your wallet locks, you can unlock it with &lt;code class=&quot;highlighter-rouge&quot;&gt;./jungle.sh wallet unlock&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can validate that the terms were updated by using a block explorer: https://jungle.bloks.io/account/lukedactoken&lt;/p&gt;

&lt;p&gt;Click Contract, Contract Tables, and then memberterms&lt;/p&gt;

&lt;p&gt;Now update the token configuration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;[lukedaccusto]&quot; &amp;gt; token_config.json
./jungle.sh push action lukedactoken updateconfig token_config.json -p lukedactoken
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create and issue your own DAC tokens. In this example I’m using TESTDAC. Note, you can only do this once, so don’t mess it up. :)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh push action lukedactoken create '[&quot;lukedactoken&quot;, &quot;10000000000.0000 TESTDAC&quot;, 0]' -p lukedactoken
./jungle.sh push action lukedactoken issue '[&quot;lukedactoken&quot;, &quot;1000000000.0000 TESTDAC&quot;, &quot;Issue&quot;]' -p lukedactoken
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Get your config file for the DAC:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo '[[&quot;35000.0000 TESTDAC&quot;, 5, 12, 60, &quot;lukedacauth1&quot;, &quot;lukedachold1&quot;, &quot;&quot;, 1, 15, 3, 10, 9, 7, 7776000, &quot;50.0000 EOS&quot;]]' &amp;gt; dac_config.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The values in that dac_config.json map to the following settings:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(lockupasset)
(maxvotes)
(numelected)
(periodlength)
(authaccount)
(tokenholder)
(serviceprovider)
(should_pay_via_service_provider)
(initial_vote_quorum_percent)
(vote_quorum_percent)
(auth_threshold_high)
(auth_threshold_mid)
(auth_threshold_low)
(lockup_release_time_delay)
(requested_pay_max)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To fully understand how these parameters are used, you may need to read the Constitution and the code. For now, we’ll stick with similar values as what eosDAC is using. This can be updated at a later as needed.&lt;/p&gt;

&lt;p&gt;Let’s set our config:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh push action lukedaccusto updateconfig dac_config.json -p lukedacauth1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note: the permissions on this call are a little unique in that the contract as currently designed requires the lukedacauth1 account which is why we had to make modifications earlier. This will be improved in a future release so the initial set up can be authorized by _self.&lt;/p&gt;

&lt;h2 id=&quot;set-up-the-front-end-client&quot;&gt;Set Up the Front End Client&lt;/h2&gt;

&lt;p&gt;Okay! Now we’re ready to hook up the front end tools to our DAC contract accounts. Fork the https://github.com/eosdac/eosdactoolkit repo and make all your own customizations:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:lukestokes/eosdactoolkit.git
cd eosdactoolkit/eosdac-material/src
git checkout dev
grep -lr --exclude-dir=&quot;.git&quot; -e &quot;eosDAC&quot; . | xargs sed -i '' -e 's/eosDAC/TestDAC/g'
git commit -a -m &quot;Replacing eosDAC with TestDAC&quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Follow the readme here to get going: https://github.com/eosdac/eosdactoolkit/tree/master/eosdac-material&lt;/p&gt;

&lt;p&gt;Make changes to the jungle config file like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/eosdac-material/src/statics/config.jungle.json b/eosdac-material/src/statics/config.jungle.json
index 5b4bd96..fc0f04b 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/eosdac-material/src/statics/config.jungle.json
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/eosdac-material/src/statics/config.jungle.json
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -3,16 +3,16 @@
&lt;/span&gt;     &quot;chainId&quot;: &quot;e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473&quot;,
     &quot;name&quot;: &quot;jungle2&quot;,
     &quot;default_node&quot;: &quot;http://jungle2.cryptolions.io:80&quot;,
&lt;span class=&quot;gd&quot;&gt;-    &quot;authorityAccount&quot;: &quot;dacauthority&quot;,
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+    &quot;authorityAccount&quot;: &quot;lukedacauth1&quot;,
&lt;/span&gt; 
     &quot;tokenContracts&quot;:{
       &quot;eosio.token&quot;:[{&quot;token&quot;: &quot;EOS&quot;, &quot;decimals&quot;: 4 }],
&lt;span class=&quot;gd&quot;&gt;-      &quot;kasdactokens&quot;:[{&quot;token&quot;: &quot;KASDAC&quot;, &quot;decimals&quot;: 4}]
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+      &quot;lukedactoken&quot;:[{&quot;token&quot;: &quot;TESTDAC&quot;, &quot;decimals&quot;: 4}]
&lt;/span&gt;     },
 
     &quot;tokenContract&quot;: {
&lt;span class=&quot;gd&quot;&gt;-      &quot;name&quot;: &quot;kasdactokens&quot;,
-      &quot;token&quot;: &quot;KASDAC&quot;,
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+      &quot;name&quot;: &quot;lukedactoken&quot;,
+      &quot;token&quot;: &quot;TESTDAC&quot;,
&lt;/span&gt;       &quot;decimals&quot;: 4,
       &quot;totalSupply&quot;: 1000000000.0000
     },
&lt;span class=&quot;gu&quot;&gt;@@ -22,12 +22,12 @@
&lt;/span&gt;       &quot;decimals&quot;: 4
     },
     &quot;custodianContract&quot;: {
&lt;span class=&quot;gd&quot;&gt;-      &quot;name&quot;: &quot;dacelections&quot;,
-      &quot;memo&quot;: &quot;dacelections&quot;,
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+      &quot;name&quot;: &quot;lukedaccusto&quot;,
+      &quot;memo&quot;: &quot;lukedaccusto&quot;,
&lt;/span&gt;       &quot;enable_voting&quot; : true
     },
     &quot;msigContract&quot;:{
&lt;span class=&quot;gd&quot;&gt;-      &quot;name&quot;: &quot;dacmultisigs&quot;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+      &quot;name&quot;: &quot;lukedacmulti&quot;
&lt;/span&gt;     },
     &quot;systemContract&quot;: {
       &quot;name&quot;: &quot;eosio&quot;
&lt;span class=&quot;gu&quot;&gt;@@ -35,7 +35,7 @@
&lt;/span&gt;   },
   &quot;api&quot;: {
     &quot;bpNodeApiUrl&quot;: &quot;https://eosdac.io/topnodes.json&quot;,
&lt;span class=&quot;gd&quot;&gt;-    &quot;memberClientApiUrl&quot;: &quot;http://ns3119712.ip-51-38-42.eu:3000&quot;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+    &quot;memberClientApiUrl&quot;: &quot;http://localhost:3000&quot;
&lt;/span&gt;   },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save and commit those changes:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git diff
git commit -a -m &quot;Updating jungle config for our own needs.&quot;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From the eosdac-material folder, install what you need and run the dev server (note: using the deploy script will remove any local changes you have that have not been committed to git):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd eosdac-material
yarn install
cd ..
./deploy-eosdac-material.sh jungle dev true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you have Scatter configured already for the Jungle test net, then you can add the lukedactoken@active account there to transfer tokens around as needed for more testing.&lt;/p&gt;

&lt;p&gt;Congratulations! You’ve made great progress so far. Get yourself a beer or your drink of choice!&lt;/p&gt;

&lt;h2 id=&quot;setting-up-our-chain-watchers-and-api&quot;&gt;Setting Up our Chain Watchers and API&lt;/h2&gt;

&lt;p&gt;Now let’s get that Profile Watcher working. First start up a local copy of mongod in its own window:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then move on to the scraper. This tool watches the Jungle chain for member profiles and saves them to mongodb so they can easily be accessed by the member client later.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:lukestokes/Actionscraper-rpc.git
cd Actionscraper-rpc
git checkout dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Edit watchers/config.jungle.js as needed:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/watchers/config.jungle.js b/watchers/config.jungle.js
index afc7af6..647ef86 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/watchers/config.jungle.js
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/watchers/config.jungle.js
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -7,17 +7,17 @@ const config = {
&lt;/span&gt; 
     db: {
         mongoUrl: 'mongodb://localhost:27017/',
&lt;span class=&quot;gd&quot;&gt;-        dbName: 'eosdac'
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+        dbName: 'testdac'
&lt;/span&gt;     },
 
     contracts:{
&lt;span class=&quot;gd&quot;&gt;-        custodian: 'dacelections',
-        token: 'kasdactokens',
-        msig: 'dacmultisigs'
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+        custodian: 'lukedaccusto',
+        token: 'lukedactoken',
+        msig: 'lukedacmulti'
&lt;/span&gt;     }
 
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Get your config set up and start the watcher:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn install
cp watchers/config.jungle.js watchers/config.js
node watcher_custodian.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;On a production server, you’d want to use the start.sh script and pm2, but just running it via node is fine for our testing.&lt;/p&gt;

&lt;p&gt;Now that we have our watcher going to look for profile changes, we need to get an API going for the member client to talk to by forking https://github.com/eosdac/memberclient-api:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:lukestokes/memberclient-api.git
cd memberclient-api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make changes to the config file as needed and copy it to config.json&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/config.example.json b/config.example.json
index ab85c52..86ae7f8 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/config.example.json
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/config.example.json
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -14,7 +14,7 @@
&lt;/span&gt;   },
 
   &quot;db&quot;: {
&lt;span class=&quot;gd&quot;&gt;-    &quot;name&quot;: &quot;eosdac&quot;,
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+    &quot;name&quot;: &quot;testdac&quot;,
&lt;/span&gt;     &quot;url&quot;: &quot;mongodb://localhost:27017/eosdac&quot;
   },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp config.example.json config.json
node api_endpoint.js 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next up we’re going to modify the permissions on all these accounts so that everything will be controlled by lukedacauth1 which will get updated permissions every time a newperiod is called.&lt;/p&gt;

&lt;p&gt;Using the tesnet permissions script here as a pattern: https://github.com/eosdac/DACtools/blob/master/eosdac-testnet/permissions.sh we can set everything up as we need.&lt;/p&gt;

&lt;p&gt;First, let’s get some permissions files set up:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo '{
    &quot;threshold&quot; : 1,
    &quot;keys&quot; : [],
    &quot;accounts&quot;: [{&quot;permission&quot;:{&quot;actor&quot;:&quot;lukedacauth1&quot;, &quot;permission&quot;:&quot;active&quot;}, &quot;weight&quot;:1}],
    &quot;waits&quot;: []
}' &amp;gt; resign.json

echo '{
    &quot;threshold&quot;: 2,
    &quot;keys&quot;: [],
    &quot;accounts&quot;: [
        {&quot;permission&quot;:{&quot;actor&quot;:&quot;lukedacauth1&quot;, &quot;permission&quot;:&quot;med&quot;}, &quot;weight&quot;:2},
        {&quot;permission&quot;:{&quot;actor&quot;:&quot;lukedaccusto&quot;, &quot;permission&quot;:&quot;eosio.code&quot;}, &quot;weight&quot;:1}
    ],
    &quot;waits&quot;: [{&quot;wait_sec&quot;:3600, &quot;weight&quot;:1}]
}' &amp;gt; daccustodian_transfer.json

echo '{
    &quot;threshold&quot;: 1,
    &quot;keys&quot;: [{&quot;key&quot;:&quot;EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc&quot;, &quot;weight&quot;:1}],
    &quot;accounts&quot;: [
        {&quot;permission&quot;:{&quot;actor&quot;:&quot;lukedaccusto&quot;, &quot;permission&quot;:&quot;eosio.code&quot;}, &quot;weight&quot;:1}
    ],
    &quot;waits&quot;: []
}' &amp;gt; dacauthority_owner.json

echo '{
    &quot;threshold&quot;: 1,
    &quot;keys&quot;: [{&quot;key&quot;:&quot;EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc&quot;, &quot;weight&quot;:1}],
    &quot;accounts&quot;: [
        {&quot;permission&quot;:{&quot;actor&quot;:&quot;lukedacauth1&quot;, &quot;permission&quot;:&quot;high&quot;}, &quot;weight&quot;:1}
    ],
    &quot;waits&quot;: []
}' &amp;gt; dacauthority_active.json

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now we can update things:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# These have to be set now because they are required in daccustodian_transfer.json
# These permissions are set in new period to the custodians with each configured threshold
./jungle.sh set account permission lukedacauth1 high EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc owner -p lukedacauth1@owner
./jungle.sh set account permission lukedacauth1 med EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc high -p lukedacauth1@owner
./jungle.sh set account permission lukedacauth1 low EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc med -p lukedacauth1@owner
./jungle.sh set account permission lukedacauth1 one EOS6vuK27d4R1vqQmNQc1b7PjGLZ3cNABtD9HEDtPuyXdZKFkwirc low -p lukedacauth1@owner

# resign dactokens account to dacauthority@active
./jungle.sh set account permission lukedactoken active ./resign.json owner -p lukedactoken@owner
./jungle.sh set account permission lukedactoken owner ./resign.json '' -p lukedactoken@owner

# resign dacmultisigs account to dacauthority@active
./jungle.sh set account permission lukedacmulti active ./resign.json owner -p lukedacmulti@owner
./jungle.sh set account permission lukedacmulti owner ./resign.json '' -p lukedacmulti@owner

# resign dacowner account to dacauthority@active, must allow timelocked transfers
# from daccustodian@eosio.code
# daccustodian_transfer.json allows the contract to make transfers with a time delay, or
# dacauthority@med without a time delay.  dacowner must have permission in xfer to transfer tokens
./jungle.sh set account permission lukedachold1 xfer ./daccustodian_transfer.json active -p lukedachold1@owner
./jungle.sh set action permission lukedachold1 eosio.token transfer xfer -p lukedachold1@owner
# Resign eosdacthedac
./jungle.sh set account permission lukedachold1 active ./resign.json owner -p lukedachold1@owner
./jungle.sh set account permission lukedachold1 owner ./resign.json '' -p lukedachold1@owner

# Create xfer permission and give it permission to transfer TESTDAC tokens
./jungle.sh set account permission lukedaccusto xfer ./daccustodian_transfer.json active -p lukedaccusto@owner
./jungle.sh set action permission lukedaccusto lukedactoken transfer xfer -p lukedaccusto@owner
# Resign daccustodian
./jungle.sh set account permission lukedaccusto active ./resign.json owner -p lukedaccusto@owner
./jungle.sh set account permission lukedaccusto owner ./resign.json '' -p lukedaccusto@owner

# Allow high to call any action on daccustodian
./jungle.sh set action permission lukedacauth1 lukedaccusto '' high -p lukedacauth1@owner
# These 2 actions require a medium permission
./jungle.sh set action permission lukedacauth1 lukedaccusto firecust med -p lukedacauth1@owner
./jungle.sh set action permission lukedacauth1 lukedaccusto firecand med -p lukedacauth1@owner
# Allow one to call the multisig actions
./jungle.sh set action permission lukedacauth1 lukedacmulti '' one -p lukedacauth1@owner
# set dacauthority@owner to point to daccustodian@eosio.code
./jungle.sh set account permission lukedacauth1 active ./dacauthority_active.json owner -p lukedacauth1@owner
# Only run this once you are done making any code changes:
#./jungle.sh set account permission lukedacauth1 owner ./dacauthority_owner.json '' -p lukedacauth1@owner
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example above, we keep the key on owner and active in case something breaks in the code and you can’t quickly get a multisignature request together to fix it, but in production you’d want to remove the keys from dacauthority_active.json and dacauthority_owner.json and run that last commented out command.&lt;/p&gt;

&lt;p&gt;Now you can go in and use your Jungle test net accounts to register as custodian candidates and vote. They will need TESTDAC tokens so you can transfer them around like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh transfer -c lukedactoken lukedactoken testdaccust1 &quot;50000.0000 TESTDAC&quot; &quot;&quot; -p lukedactoken
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to launch the DAC and call newperiod, you’ll need a full 12 custodians, so you can create a bunch on Jungle like so:&lt;/p&gt;

&lt;p&gt;testdaccust1
testdaccust2
testdaccust3
testdaccust4
testdaccust5
testdaccus11
testdaccus12
testdaccus13
testdaccus14
testdaccus15&lt;/p&gt;

&lt;p&gt;Just use&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh create key --to-console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To create a key for them to use. You can either use the Scatter interface and your member client or you can do things via cleos.&lt;/p&gt;

&lt;p&gt;To register as a member, stake TESTDAC tokens, nominate yourself as a custodian candidate, and vote for yourself via cleos you use the Constitution hash we saved above (make sure you import the key you need with &lt;code class=&quot;highlighter-rouge&quot;&gt;./jungle.sh wallet import&lt;/code&gt;) like so:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh push action lukedactoken memberreg '[&quot;testdaccust1&quot;, &quot;a2022da6e770e0b2c3e5d3a10a560dc9&quot;]' -p testdaccust1
./jungle.sh transfer -c lukedactoken testdaccust1 lukedaccusto &quot;35000.0000 TESTDAC&quot; &quot;lukedaccusto&quot; -p testdaccust1
./jungle.sh push action lukedaccusto nominatecand '[&quot;testdaccust1&quot;, &quot;1.0000 EOS&quot;]' -p testdaccust1
./jungle.sh push action lukedaccusto votecust '[&quot;testdaccust1&quot;,[&quot;testdaccust1&quot;]]' -p testdaccust1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assuming we have 12 custodian candidates in place, you can call newperiod to actually unlock the DAC:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./jungle.sh push action lukedaccusto newperiod '{&quot;message&quot;:&quot;New Period&quot;}' -p testdaccus15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that’s it! You now have your very own DAC to play with!&lt;/p&gt;

&lt;p&gt;You should see the permissions of your authority account update like so:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmVTYuWDAB4tc3WPxJrUmRMejhSUWK8X1JDFuXk8TTW3SN/image.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;For fun, let’s go ahead and customize the member client a bit by changing some colors:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/eosdac-material/src/css/themes/common.variables.styl b/eosdac-material/src/css/themes/common.variables.styl
index a04237f..0c48881 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/eosdac-material/src/css/themes/common.variables.styl
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/eosdac-material/src/css/themes/common.variables.styl
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -15,8 +15,8 @@
&lt;/span&gt; // to match your app's branding.
 @import &quot;core-override.variables.styl&quot;
 
&lt;span class=&quot;gd&quot;&gt;-$primary   = #4a1289
-$secondary = #26A69A
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+$primary   = #1a9c41
+$secondary = #076a61
&lt;/span&gt; $tertiary  = #555
 
 $neutral   = #E0E1E2
&lt;span class=&quot;gu&quot;&gt;@@ -25,12 +25,12 @@ $negative  = #DB2828
&lt;/span&gt; $info      = #31CCEC
 $warning   = #F2C037
 
&lt;span class=&quot;gd&quot;&gt;-$dark      = #272B35
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+$dark      = #2b3527
&lt;/span&gt; $p-light   = #7c41ba
 $dark2     = #1E2128
 $dimwhite  = rgba(255,255,255,0.6)
 
&lt;span class=&quot;gd&quot;&gt;-$body-background = #272B35
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+$body-background = #2b3527
&lt;/span&gt; $body-color = #ffffff
 $modal-body-color = $white
 $modal-background = $dark2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And adding a different logo image (be sure to copy the image to the statics/img folder):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/eosdac-material/src/layouts/default.vue b/eosdac-material/src/layouts/default.vue
index b7e7ecf..8d51a3b 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/eosdac-material/src/layouts/default.vue
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/eosdac-material/src/layouts/default.vue
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -7,7 +7,7 @@
&lt;/span&gt;         &amp;lt;q-icon v-else name=&quot;icon-menu-9&quot; /&amp;gt;
       &amp;lt;/q-btn&amp;gt;
       &amp;lt;q-toolbar-title class=&quot;text-white q-pl-none&quot;&amp;gt;
&lt;span class=&quot;gd&quot;&gt;-        &amp;lt; img src=&quot;statics/img/icon-signet-eosdacmemberclient175x48.svg&quot; style=&quot;height:48px;&quot; :title=&quot;$t('default.member_client')&quot;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+        &amp;lt; img src=&quot;statics/img/do_you_want_to_build_a_dac.jpg&quot; style=&quot;height:48px;&quot; :title=&quot;$t('default.member_client')&quot;&amp;gt;
&lt;/span&gt;       &amp;lt;/q-toolbar-title&amp;gt;
       &amp;lt;div class=&quot;xs-hide sm-hide md-hide&quot; &amp;gt;
         &amp;lt;MenuDropdown class=&quot;no-pointer-events animate-fade&quot; v-if=&quot;getAccountName &amp;amp;&amp;amp; getRegistered &amp;amp;&amp;amp; getTokenBalance&quot; iconColor=&quot;white&quot; :label=&quot;$t('default.member_status')&quot; :statusLabel=&quot;1&quot; :sublabel=&quot;$t('default.registered')&quot; icon=&quot;icon-role-3&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;sub&gt;(Note: the space added after the “&amp;lt;” above should be removed. It was included because of &lt;a href=&quot;https://github.com/steemit/condenser/issues/3200&quot;&gt;this bug&lt;/a&gt;.)&lt;/sub&gt;
Here’s the result:&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmTK3P4YjiuYJJj4MxmxHfZruNaNYCH9WADcHoHBcUkDny/image.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;And that’s it! Congratulations! You’ve created your own Decentralized Autonomous Community on the Jungle test net! Customizing the member client involves learning a bit about Material Design, the Quasar framework, and Vue.js. You can also adjust your DAC settings by having more or less than 12 custodians, changing the voting weights, and more.&lt;/p&gt;

&lt;p&gt;We’d love to get your feedback on this as you start to use it to organize and empower your own communities. To support this ongoing work, please vote for the EOS blockproducer &lt;code class=&quot;highlighter-rouge&quot;&gt;eosdacserver&lt;/code&gt; or use a proxy who supports us. We’d also really like to see more DACs launch and airdrop the tokens they create to our eosDAC members (currently just over 1,900 accounts) who have supoorted us and made this possible. Thank you!&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;em&gt;Luke with the incredible work and help of Michael, Dallas, Piecesnbits, Nod74, and many more.&lt;em&gt;&amp;lt;/sub&amp;gt;&lt;/em&gt;&lt;/em&gt;&lt;/sub&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://eosdac.io/&quot;&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmRQWM3QtQ21wddAMCjbVRhB3rM7L4AGWLY9QpNmkXNLps/Screen%20Shot%202018-06-12%20at%2011.00.55%20PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PbQpAJOP6iA&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;center&gt;&lt;h1&gt;Please vote for eosdacserver&lt;/h1&gt;&lt;/center&gt;

&lt;p&gt;Join &lt;a href=&quot;https://eosdac.io/news/#newsletter&quot;&gt;our newsletter&lt;/a&gt; to stay informed and follow us on your favorite social media platform:&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;&lt;a href=&quot;https://steemit.com/@eosdac&quot; target=&quot;_blank&quot;&gt;Steemit&lt;/a&gt; | &lt;a href=&quot;http://discord.io/eosdac&quot; target=&quot;_blank&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://t.me/eosdacio&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; | &lt;a href=&quot;https://facebook.com/eosdac&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt; | &lt;a href=&quot;https://twitter.com/eosdac&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://plus.google.com/+eosdac&quot; target=&quot;_blank&quot;&gt;Google-plus&lt;/a&gt; | &lt;a href=&quot;https://github.com/eosdac&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;https://instagram.com/eosdac&quot; target=&quot;_blank&quot;&gt;Instagram&lt;/a&gt; | &lt;a href=&quot;https://linkedin.com/company/eosdac&quot; target=&quot;_blank&quot;&gt;Linkedin&lt;/a&gt; | &lt;a href=&quot;https://medium.com/eosdac&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/EOSDAC/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/eosdac&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; | &amp;lt;a href=”http://weibo.com/eosdac” target=”_blank”&amp;gt;Weibo&amp;lt;/a&amp;gt;| &lt;a href=&quot;https://vk.com/eosdac&quot; target=&quot;_blank&quot;&gt;VK&lt;/a&gt;| &lt;a href=&quot;https://bihu.com/people/586348&quot; target=&quot;_blank&quot;&gt;Bihu&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Update: You can now use the DAC Factory script to automate much of what is described here.</summary></entry><entry><title type="html">eosDAC Participates in the BOS Network Launch</title><link href="/2019/01/18/eosdac-participates-in-the-bos-network-launch.html" rel="alternate" type="text/html" title="eosDAC Participates in the BOS Network Launch" /><published>2019-01-18T00:20:36+01:00</published><updated>2019-01-18T00:20:36+01:00</updated><id>/2019/01/18/eosdac-participates-in-the-bos-network-launch</id><content type="html" xml:base="/2019/01/18/eosdac-participates-in-the-bos-network-launch.html">&lt;p&gt;&lt;em&gt;The EOSIO based BOS chain has just launched! eosDAC is pleased to have supported the mainnet launch today and we hope to keep producing blocks for the BOS Mainnet.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.steemitimages.com/DQmZCM9xMeUDj347kLxPb64zDvfwotEEHMVQPNnBaBiMCq4/bos.png&quot; alt=&quot;bos.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;eosdacs-code-of-conduct&quot;&gt;eosDAC’s Code of Conduct&lt;/h1&gt;
&lt;p&gt;The primary objective of eosDAC is to ensure that it is able to continuously produce blocks required by EOS.IO software driven blockchains. We want EOS.IO blockchains to flourish so we will engage with EOS communities with a view to initiating and supporting projects that benefit all EOS.IO blockchain communities. This will include tools for other DACs.&lt;/p&gt;

&lt;h1 id=&quot;about-bos&quot;&gt;About BOS&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;BOS is committed to providing users with easy-to-access and easy-to-use blockchain services, providing a more user-friendly infrastructure for DApp operations, working to support richer application scenarios, and actively experimenting with DApp booms. In addition to technical improvements, BOS will also try other aspects. For example, in order to increase the participation of users in voting, estimator technology can be used to motivate accounts that meet clear rules. The rewards of BP on BOS will be adjusted according to the number of DApp on the chain, TPS, market value, liquidity and other indicators. 
A resolution reached by a community referendum will be coded as much as possible, to reduce human factors in the process, keep the process on chain, and maintain fairness and transparency. The codes of the BOS chain are fully contributed and maintained by the community. Each ecological participant can submit codes or suggestions. The related process will refer to existing open source software, such as PEP (Python Enhancement Proposals). In order to encourage the development of DApp in BOS, the BOS Foundation will provide Token replacement of low-cost resource mortgage services for DApp in BOS, reduce the operating costs of DApp in the early stage; in addition, it will also regularly provide BOS incentives to developers who contribute on a regular basis in order to establish a mutually reinforcing community development trend.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can read about BOSCore DApp Funds Scheme and Toolkit on https://boscore.io. Other useful resources: 
&lt;a href=&quot;https://github.com/boscore/Documentation&quot;&gt;Whitepaper&lt;/a&gt; and &lt;a href=&quot;https://github.com/boscore&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The BOS team has recently demonstrated Inter Blockchain Communication (&lt;a href=&quot;https://youtu.be/FhSeLS2THnM&quot;&gt;you can watch the demo here&lt;/a&gt;), and eosDAC believes developing and enabling IBC will greatly benefit the entire EOSIO ecosystem. You can review the &lt;a href=&quot;https://github.com/boscore/bos/tree/feature/ibc-plugin&quot;&gt;IBC plugin here&lt;/a&gt;. eosDAC is looking forward to seeing the BOS network help DApps flourish as well as their progress with the IBC technology.&lt;/p&gt;

&lt;h1 id=&quot;bos-token---bp--dev-rewards&quot;&gt;BOS Token - BP &amp;amp; Dev Rewards&lt;/h1&gt;

&lt;p&gt;BOS BPs are voted in by the token holders just like like the EOS Mainnet - eosDAC (On BOS: bosdacserver) need your vote!&lt;/p&gt;

&lt;p&gt;As for the developers:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;An additional 0.8% issuance will be given to the BOS eco-contribution code developer every year. Fifty candidates will be nominated by the community. Top 50 BPs vote 40 winners to get the awards: the top 10 share 40%, people ranked 11 to 20 share 30%, the last 20 share the remaining 30% evenly. The reward happens once every 3 months and each reward will be carried out with a one-week publicity. It will be re-evaluated if there is a reasonable objection. And each reward list will be recorded on chain. As BOS continues to develop, developer rewards will be appropriately adjusted to allow the community to provide more momentum for the evolution of BOS.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;how-to-use-tools-and-vote-for-block-producers&quot;&gt;How to use tools and vote for Block Producers&lt;/h1&gt;

&lt;p&gt;50 million BOS tokens were airdropped to EOS holders at the ratio of 1:20 based on the snapshot taken on 1st of January. **Please note that your account name on the BOS network was changed. Search for your EOS Mainnet public key &lt;a href=&quot;https://raw.githubusercontent.com/boscore/bos-airdrop-snapshots/master/accounts_info_bos_snapshot.airdrop.normal.csv&quot;&gt;here in the snapshot&lt;/a&gt; or account name on &lt;a href=&quot;https://bos.bloks.io/snapshot&quot;&gt;https://bos.bloks.io/snapshot&lt;/a&gt; in order to see your BOS account name. (If you had a multisig account, &lt;a href=&quot;https://raw.githubusercontent.com/boscore/bos-airdrop-snapshots/master/accounts_info_bos_snapshot.airdrop.msig.json&quot;&gt;you can find those mappings, here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Too use BOS tools and vote for BOS Block Producers, Scatter is required. Add a new network in Scatter with following information:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;HOST: bos.eosio.sg，protocol: HTTP，Port: 8888， ChainID: d5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another much easier way if you prefer is to &lt;strong&gt;simply login to bos.eosx.io with Scatter&lt;/strong&gt; with your EOS Genesis account: Head to https://bos.eosx.io/tools/vote with your Scatter unlocked, click ‘Attach Scatter Identity’ and then the Scatter window will automatically register the network and load your BOS account name. Select ‘Login to proceed.&lt;/p&gt;

&lt;center&gt;![scatter.PNG](https://cdn.steemitimages.com/DQmRAirqKUCfrVo1wYduPyCjtmu9FrFmk5jC4MNVLpsfMgN/scatter.PNG)&lt;/center&gt;

&lt;p&gt;Once all setup, you can now &lt;strong&gt;vote for bosdacserver&lt;/strong&gt; at https://bos.eosx.io/tools/vote :)&lt;/p&gt;

&lt;center&gt;![votebos.PNG](https://cdn.steemitimages.com/DQmPqF71eGuVgcSPoh9U9s7RaBt84mKK2qX2wCzeLrB1hjh/votebos.PNG)&lt;/center&gt;

&lt;p&gt;We have also uploaded a &lt;a href=&quot;https://youtu.be/Cv6AeXBG0Pg&quot;&gt;tutorial video&lt;/a&gt; demonstrating how to vote on BOS Mainnet.&lt;/p&gt;

&lt;p&gt;JOIN BOS TODAY!
For Devs: https://t.me/BOSDevelopers
Broader Community: https://t.me/boscorecommunity&lt;/p&gt;

&lt;p&gt;-Soyoung&lt;/p&gt;</content><author><name></name></author><summary type="html">The EOSIO based BOS chain has just launched! eosDAC is pleased to have supported the mainnet launch today and we hope to keep producing blocks for the BOS Mainnet.</summary></entry><entry><title type="html">eosDAC needs your participation!</title><link href="/2019/01/15/eosdac-needs-your-participation.html" rel="alternate" type="text/html" title="eosDAC needs your participation!" /><published>2019-01-15T00:00:01+01:00</published><updated>2019-01-15T00:00:01+01:00</updated><id>/2019/01/15/eosdac-needs-your-participation</id><content type="html" xml:base="/2019/01/15/eosdac-needs-your-participation.html">&lt;p&gt;At eosDAC we’re building a real live DAC block producer. Delegated proof of stake as a model of cryptographic block confirmation is already pretty cool, we think, since it spreads the block confirmation workload across block producers according to a voting mechanism.&lt;/p&gt;</content><author><name></name></author><summary type="html">At eosDAC we’re building a real live DAC block producer. Delegated proof of stake as a model of cryptographic block confirmation is already pretty cool, we think, since it spreads the block confirmation workload across block producers according to a voting mechanism.</summary></entry></feed>